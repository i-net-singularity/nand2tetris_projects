// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
        // write
        DMux8Way(in=load,sel=address
                ,a=reg1,b=reg2,c=reg3,d=reg4, e=reg5,f=reg6,g=reg7,h=reg8);
        
        // ram
        Register(in=in,load=reg1,out=regOut1);
        Register(in=in,load=reg2,out=regOut2);
        Register(in=in,load=reg3,out=regOut3);
        Register(in=in,load=reg4,out=regOut4);
        Register(in=in,load=reg5,out=regOut5);
        Register(in=in,load=reg6,out=regOut6);
        Register(in=in,load=reg7,out=regOut7);
        Register(in=in,load=reg8,out=regOut8);

        // read
        Mux8Way16(a=regOut1,b=regOut2,c=regOut3,d=regOut4,e=regOut5,f=regOut6,g=regOut7,h=regOut8
                ,sel=address,out=out);

}